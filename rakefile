require 'yard'
require 'rake/testtask'

task :default => ["development:start"]

# --------------------------------------------------------------

namespace :setup do
  desc 'Setup everything.'
  task :bundle do
    # Install bundle
    begin
      sh 'gem install bundle'
    rescue
      puts "Error while installing bundle."
    end

    # Install gems
    begin
      sh 'bundle install'
    rescue
      puts "Error while installing gems."
    end

    puts "Use '$ rake' to start with development!"
  end

  desc 'Update gems.'
  task :update do
    begin
      sh 'bundle update'
    rescue
      puts "Error while installing update."
    end
  end
end

desc 'Default setup task'
task :setup do Rake::Task['setup:bundle'].execute end

# --------------------------------------------------------------

#  ----------- TEST MUST NEVER BE RUN IN PRODUCTION MODE -----------
namespace :test do
  task :unit => :development do
    ruby 'test/unit/all.rb'
  end
end

desc 'Default test task'
task :test do Rake::Task['test:unit'].execute end

# --------------------------------------------------------------

namespace :doc do
  YARD::Rake::YardocTask.new(:generate) do |t|
    t.files   = [ 'rb/**/*.rb', 'main.rb' ]
    t.options = ['-opublic/pages/doc', '--no-stats']
    
    t.after = Proc.new {
      Rake::Task['doc:stats'].execute
    }
  end
  
  desc "Shows stats for YARD Documentation including listing undocumented modules, classes, constants, and methods"
  task :stats do
    stats = YARD::CLI::Stats.new
    stats.files   = [ 'rb/**/*.rb', 'main.rb' ]
    stats.run('main.rb', 'rb/**/*.rb', '--list-undoc')
  end
end

desc 'Default doc task'
task :doc do Rake::Task['doc:generate'].execute end

# --------------------------------------------------------------

namespace :neo4j do
  desc 'Start the Neo4j Server'
  task :start do
    sh 'neo4j start'
  end

  desc 'Stop the Neo4j Server'
  task :stop do
    sh 'neo4j stop'
  end
end

desc 'Default neo4j task'
task :neo4j do Rake::Task['neo4j:start'].execute end

# --------------------------------------------------------------

namespace :development do
  desc 'Quick dev start'
  task :start do
    begin
      sh 'neo4j start'
    rescue
    end
    sh 'rackup'
  end

  desc 'Start a racksh console for console debuggin.'
  task :sh do
    begin
      sh 'neo4j start'
    rescue
    end
    sh 'racksh'
  end
end

desc 'Default development task'
task :development do Rake::Task['development:start'].execute end

# --------------------------------------------------------------

namespace :production do
  desc 'Start the server'
  task :start do
    sh 'bundle exec rackup -E production'
  end

  desc 'Start the server (network test)'
  task :start_net do
    sh 'ruby main.rb -o 0.0.0.0' # Â¿?
  end
end

desc 'Default production task'
task :production do Rake::Task['production:start'].execute end

# --------------------------------------------------------------

namespace :heroku do
  desc 'Setup heroku toolbelt.'
  task :setup do
    sh "wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh"
  end

  desc 'Launch the server to an heroku app.'
  task :start do
    sh 'git push heroku HEAD:master --force'
  end

  desc 'Log heroku data and errors.'
  task :logs do
    sh 'heroku logs'
  end

end

desc 'Default heroku task'
task :heroku do Rake::Task['heroku:start'].execute end

# --------------------------------------------------------------

namespace :docker do
  desc 'Setup docker image.'
  task :setup do
    sh "docker build -t progrezz/server ."
  end

  desc 'Start docker process.'
  task :start, [:rake_task] do |t, args|
    sh 'docker run -i -t --net host progrezz/server ' + args[:rake_task].to_s
  end

end

desc 'Default docker task'
task :docker do Rake::Task['docker:start'].execute end

