<h1>Messages administration</h1>

<h2>Add a system message</h2>
<form id="add_msg">
  <label for="add_content">Content: </label><input type="text" placeholder="Message content (e.g: Admin was here.)." name="add_content" id="add_content"><br>
  <label for="add_resource">Resource Link: </label><input type="text" placeholder="Resource link (e.g: http://progrezz.it/image.png)." name="add_resource" id="add_resource"><br>
  <label for="add_nfragments">Total fragments: </label><input type="number" placeholder="Number of fragments." min="1" max="50" name="add_nfragments" id="add_nfragments"><br>
  
  <button type="submit">Submit</button>
</form>

<h2>Remove a system message</h2>
<p>...</p>

<h2>System messages list</h2>
<div id="message_list">
  <table>
    <tr>
      <th>uuid</th>
      <th>content</th>
      <th>resource</th>
      <th>n fragments</th>
      <th>replicable</th>
      <th>snap to roads</th>
      <th>total replications</th>
    </tr>
    <% Game::Database::Message.system_messages.each do |msg| %>
    <tr>
      <td><%= msg.uuid %></td>
      <td><%= msg.content %></td>
      <td><a href="<%= msg.resource_link %>"><%= msg.resource_link %></a></td>
      <td><%= msg.total_fragments %></td>
      <td><%= msg.replicable %></td>
      <td><%= msg.snap_to_roads %></td>
      <td><%= msg.replications %></td>
    </tr>
    <% end %>
  </table>
</div>

<h2>Progrezz's messages locations map</h2>
<form>
  <label for="msg_uuid">Message uuid: </label>
  <input type="text" id="msg_uuid">
  <input type="button" onclick="query();" value="Submit">
</form>

<div id="osm_map"></div>
<br><br>


<script src="/lib/client-api-rest/js/progrezz-api-rest.js"></script>
<script src="http://www.openlayers.org/api/OpenLayers.js"></script>
<script>
    // Crear mapa
  map = new OpenLayers.Map("osm_map");
  map.addLayer(new OpenLayers.Layer.OSM());
  var lonLat         = new OpenLayers.LonLat( -4.3043423, 39.984898 ).transform(
    new OpenLayers.Projection("EPSG:4326"),   // Transform from WGS 1984
    new OpenLayers.Projection("EPSG:900913")  // to Spherical Mercator Projection
  );
 
  var zoom = 4;
  map.setCenter (lonLat, zoom);
  
    // Crear marcadores
  var marker_url = "/img/api/markers/";
  var marker_colors   = ["blue", "brown", "darkgreen", "green", "orange", "paleblue", "pink", "purple", "red", "yellow" ]
  var marker_alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
  var marker_url_repo = [];
  var marker_url_repo_count = 0;
  var marker_per_msg = {};
  
  // Contruir repositorio
  for (i in marker_alphabet)
    for (j in marker_colors)
      marker_url_repo.push(marker_url + marker_colors[j] + "_Marker" + marker_alphabet[i] + ".png");
  
  // Capa
  var markers = new OpenLayers.Layer.Markers( "Markers" );
  map.addLayer(markers);
  
  // Propiedades de marcadores
  var size = new OpenLayers.Size(20, 34);
  var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
  var icon = null;
  
    // Añadir mensaje
  $(document).ready(function(){
    $('#add_msg').submit(function(evento){
      evento.preventDefault();
      var datos_formulario = $(this).serialize();         
      $.ajax({
        url: '/admin/messages/add',
        data: datos_formulario,
        type: 'post',
        dataType: 'json',
        success: function(datos){
          // Recargar
          window.location.href=window.location.href
        }
      });     
    });
  });
  
    // Petición REST
  request = new RESTRequest();
  request.onComplete = render_map;
  
  json_request = RESTRequest.getTemplateRequest();
  json_request.request.type = "message_get"
  json_request.request.data = { type: "json", msg_uuid: "" }

  function query() {
    json_request.request.data.msg_uuid = document.getElementById("msg_uuid").value;
    request.request( json_request );
  }
  
  function render_map(json) {
    console.log(json);
    
    if(json.response.status == "error") {
      alert("Error: " + json.response.message);
    }
    
    var msg_uuid = json.response.data.info.message.uuid;
    
    if(marker_per_msg[msg_uuid] == null) 
      marker_per_msg[msg_uuid] = marker_url_repo[marker_url_repo_count++];
    
    
    $.each( json.response.data.info.fragments, function (i, v) {
      lonLat = new OpenLayers.LonLat( v.geolocation.longitude, v.geolocation.latitude ).transform(
        new OpenLayers.Projection("EPSG:4326"),   // Transform from WGS 1984
        new OpenLayers.Projection("EPSG:900913")  // to Spherical Mercator Projection
      );
      
      icon   = new OpenLayers.Icon(marker_per_msg[msg_uuid], size, offset);
      markers.addMarker(new OpenLayers.Marker(lonLat, icon));
    });
  }
  
</script>